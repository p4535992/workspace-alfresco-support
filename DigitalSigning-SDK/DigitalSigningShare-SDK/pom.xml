<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  	<modelVersion>4.0.0</modelVersion>
  	<groupId>com.alfresco.plugin</groupId>
  	<artifactId>digitalSigningShare</artifactId>
  	<packaging>jar</packaging>
  	<version>1.2.0</version>
  	<name>Alfresco Digital Signing Plugin -SDK</name>
  	<description>Alfresco Digital Signing Plugin - SDK</description>
  	
  	<!-- Default properties -->
	<properties>
		<!-- Module id -->
		<alfresco.module.id>digitalSigningShare</alfresco.module.id>
		
		<!-- Alfresco Maven Plugin version to use -->
        <alfresco.sdk.version>3.0.1</alfresco.sdk.version>
		
	    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Alfresco Data directory, which will contain:
              Content Store (i.e. the files we upload)
              Database (i.e. the metadata for the uploaded files)
              Search index (i.e. the indexed content and metadata)
             Configured in alfresco-global.properties with the 'dir.root' property.
        -->
        <alfresco.data.location>${session.executionRootDirectory}/alf_data_dev</alfresco.data.location>

        <!-- Duplicated with alfresco.solrHome in the plugin, we need them out here to do filtering -->
        <solr.home>${alfresco.data.location}/solr</solr.home>
        <solr.model.dir>${solr.home}/alfrescoModels</solr.model.dir>
        <solr.content.dir>${solr.home}/index</solr.content.dir>

        <!-- Properties used in dependency declarations, you don't need to change these -->
        <alfresco.groupId>org.alfresco</alfresco.groupId>

        <!-- Alfresco Platform and Share webapp versions, these are the original Alfresco webapps that will be
             customized and then deployed and run by the tomcat maven plugin when
             executing for example $ mvn clean install alfresco:run -->
        <alfresco.platform.version>5.2.d</alfresco.platform.version>
        <alfresco.share.version>5.2.d</alfresco.share.version>

        <!-- Default is to run with a Community edition, change to 'enterprise' if using Enterprise edition -->
        <maven.alfresco.edition>community</maven.alfresco.edition>

        <!-- Alfresco Surf version, if you change Share version you might need to change Surf version -->
        <alfresco.surf.version>6.11</alfresco.surf.version>

        <!-- JRebel Hot reloading of classpath stuff and web resource stuff -->
        <jrebel.version>1.1.6</jrebel.version>

        <!-- Environment to use, Alfresco Maven Plugin will
             copy alfresco-global-*.properties files from this directory, such as src/test/properties/local -->
        <env>local</env>

        <!-- Compile with Java 7, default is 5 -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	
	<dependencyManagement>
        <dependencies>
            <!-- This will import the dependencyManagement for all artifacts in the selected Alfresco platform.
                 NOTE: You still need to define dependencies in your POM, but you can omit version as
                       it's enforced by this dependencyManagement.
                 NOTE: It defaults to the latest version this SDK pom has been tested with,
                       but alfresco version can/should be overridden in your project's pom
            -->
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>alfresco-platform-distribution</artifactId>
                <version>${alfresco.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Redefine the following Share dependencies as they have different version numbers than platform.
                 They are defined in alfresco-platform-distribution... -->
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>share</artifactId>
                <version>${alfresco.share.version}</version>
                <type>war</type>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>share</artifactId>
                <version>${alfresco.share.version}</version>
                <classifier>classes</classifier>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>alfresco-web-framework-commons</artifactId>
                <version>${alfresco.share.version}</version>
                <classifier>classes</classifier>
                <scope>provided</scope>
            </dependency>

            <!-- Redefine the following surf dependencies as they have no resolvable version in the
                 alfresco-platform-distribution artifact -->
            <dependency>
                <groupId>org.alfresco.surf</groupId>
                <artifactId>spring-surf</artifactId>
                <version>${alfresco.surf.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.alfresco.surf</groupId>
                <artifactId>spring-surf-api</artifactId>
                <version>${alfresco.surf.version}</version>
                <scope>provided</scope>
            </dependency>
            
        </dependencies>
    </dependencyManagement>

	
	<dependencies>
		<dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
            <scope>test</scope>
        </dependency>
        <!-- https://stackoverflow.com/questions/3135871/maven-compilation-failes-but-compilation-under-eclipse-is-successful/3135894 -->  
        <dependency>
	    	<groupId>javax.servlet</groupId>
		    <artifactId>servlet-api</artifactId>
		    <version>2.4</version>
		    <scope>provided</scope>
	  	</dependency>
	  	
		<!-- Alfresco dependencies -->
	
		<!--
		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-core</artifactId>
			<version>${alfresco.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<artifactId>
						alfresco-web-framework-commons
					</artifactId>
					<groupId>org.alfresco</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		-->
		
		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>share</artifactId>
			<version>${alfresco.platform.version}</version>
			<scope>provided</scope>
			<classifier>classes</classifier>
		</dependency>
		
	</dependencies>
	
	
	<repositories>
		<repository>
			<id>alfresco-public</id>
			<url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>alfresco-private</id>
			<url>https://artifacts.alfresco.com/nexus/content/groups/private</url>
		</repository>
		<repository>
			<id>alfresco-thirdparty</id>
			<url>https://artifacts.alfresco.com/nexus/content/repositories/thirdparty</url>
		</repository>
		<repository>
			<id>alfresco-public-snapshots</id>
			<url>https://artifacts.alfresco.com/nexus/content/repositories/public-snapshots</url>
		</repository>
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
	</repositories>	

<build>
		<plugins>
			<!--
                 Build an AMP if 3rd party libs are needed by the extensions
                 JARs are the default artifact produced in your modules, if you want to build an amp for each module
                 you have to enable this plugin and inspect the src/main/assembly.xml file if you want to customize
                 the layout of your AMP. The end result is that Maven will produce both a JAR file and an AMP with your
                 module.
             -->
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-assembly-plugin</artifactId>
                 <version>2.6</version>
                 <executions>
                     <execution>
                         <id>build-amp-file</id>
                         <phase>package</phase>
                         <goals>
                             <goal>single</goal>
                         </goals>
                         <configuration>
                             <appendAssemblyId>false</appendAssemblyId>
                             <descriptor>src/main/assembly/amp.xml</descriptor>
                         </configuration>
                     </execution>
                 </executions>
                 <dependencies>
                     <dependency>
                         <groupId>org.alfresco.maven.plugin</groupId>
                         <artifactId>alfresco-maven-plugin</artifactId>
                         <version>${alfresco.sdk.version}</version>
                     </dependency>
                 </dependencies>
              </plugin>	
              
              <!-- Filter resources in any sub-project with this config -->
              <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-resources-plugin</artifactId>
                  <version>3.0.1</version>
                  <configuration>
                      <encoding>UTF-8</encoding>
                      <nonFilteredFileExtensions> <!-- jpg, jpeg, gif, bmp and png are added automatically -->
                          <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
                          <nonFilteredFileExtension>acp</nonFilteredFileExtension>
                          <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                          <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                          <nonFilteredFileExtension>doc</nonFilteredFileExtension>
                          <nonFilteredFileExtension>docx</nonFilteredFileExtension>
                          <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                          <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                          <nonFilteredFileExtension>ppt</nonFilteredFileExtension>
                          <nonFilteredFileExtension>pptx</nonFilteredFileExtension>
                          <nonFilteredFileExtension>bin</nonFilteredFileExtension>
                          <nonFilteredFileExtension>lic</nonFilteredFileExtension>
                          <nonFilteredFileExtension>swf</nonFilteredFileExtension>
                          <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                          <nonFilteredFileExtension>msg</nonFilteredFileExtension>
                          <nonFilteredFileExtension>jar</nonFilteredFileExtension>
                          <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                          <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                          <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                          <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                          <nonFilteredFileExtension>css</nonFilteredFileExtension>
                          <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                          <nonFilteredFileExtension>psd</nonFilteredFileExtension>
                          <nonFilteredFileExtension>js</nonFilteredFileExtension>
                      </nonFilteredFileExtensions>
                  </configuration>
              </plugin>
              
              <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>			
        </plugins>
        
        <pluginManagement>
			<plugins>
				<!-- This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.sourcesense.maven
										</groupId>
										<artifactId>
											maven-nosnapshot-plugin
										</artifactId>
										<versionRange>
											[0.0.7,)
										</versionRange>
										<goals>
											<goal>strip</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.6,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
     

        <!-- Make sure resources in sub-projects are filtered -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
	</build>
</project>